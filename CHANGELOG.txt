Changelog:

Started:
Code cleanup, moving to a more sane directory structure
Build the last revision of allegro 4 and added it to the build. (This should get completely removed at a later date)
Updated/Changed the input with code from an early revision of MAME. This fixes many of the biggest play issues. Some fixes still need to be implemented.
Added the 6809 CPU Class
Started updating and fixing the CPU code and adding the timer code.
Updating all the sound code. 

TBD: 08092024
Add back in StarWars. (done)
Fix the remaing issues with input. (done)
Finish fixing the menu and config options code. 
Add in more driver settings so my newer code will work with what's here.
Add in my 6502 CPU Class. (done) (Requires the cpu_control code to be rewritten, and this will require all the atari drivers to completely reworked.)
Add in the Z80 class I am still working on. (done)
Fix emulation in Omega Race to be real. (sort of done)
Add in the later MAME (TM) avg vector code. This requires just about all the Atari drivers to be completely rebuilt mame style, and the cpu_control code to be completely changed. See Star Wars above. This is a major cleanup effort and will take a while.
Add in the correct widescreen support class, cleanup the gl code. 
Update all ROM files to match current MAME naming.

Completed 09272024
All Inputs should now be corrected. 
All Cinematronics games should be working correctly with correct dipswitches.
Started Cleanup and Reorganization of just about every file. 
Working on cleaning up and merging the current atart avg/dvg video code. 
Just fixed the last glaring issue in my Z80 core, with that core the Sega decryption issues are fixed. TBD

Completed 10192024
Swapped out the 6502 Assembly code for my new 6502 core, one step closer to a 64 bit compile.
Starwars is back in and working correctly with a really old style emulation ala M.A.M.E(TM)
All games should be working now with correct input, even if you can't save the settings. 
Omega Race is fixed, if not emulated correctly, at least it plays well.
Next is to fix the menu system, fix some pokey sound issues and start chipping away at the more insane spagetti code.
The GUI is still an issue, with at least two memory leaks.


10/27/24 to 11/28/24

Major Fix: found and corrected a serious memory leak in the graphics core, this has been plaguing the emulator for so many years, fixes many small and (large) crashes and issues. error_tex[2], not error_tex[1]! 

Redid the PPC code on the Retrocade CMZ80 core, invalidated the PPC on Interrupt, this fixed all the decryption on the SegaG80 games. So that's what "Spurious Interrupts" means in the M.A.M.E(tm) driver. :(
Redid most of the SegaG80 driver, all games should be working correctly. 
More Z80 changes, they are in their own changelog.
Changed the 6502 cpu core back to mame style address handling, had to touch most of the drivers to fix issues. Fixed a pokey addressing issue with Black Widow, did a lot of cleanup on Major Havoc. 
Started cleanup of the graphics code, what a mess. Lots more to do. 
General cleanup everywhere, touched nearly every driver. 
Added back Star Wars, had to use very old M.A.M.E.(TM) driver code to get Luke to speak every time, I have this running in AAE2014 with modern drivers in other, cycle accurate timing code, and it still doesn't work there 100% either. I'll come back to it, at least it's working now, if not very accurate. Added different CPU handling to accomidate this. 
Now that the games are working mostly correctly, it's back to cleanup, consolidation, improving accuracy, and getting the menu system back working for sound and video. 

11/28/24 to 12/01/24

Cleaned up and added a new AY8910 core, added it to Omega Race and added nvram handling to all drivers that support it. Omega Race should be at least fairly accurate now.  
Reorganized all the OpenGl code in an attempt to make some sense of it. Added the Mushai 68000 core to maybe use with Quantum.

12/01/2024

Corrected the artwork sizing issues, this is the first build I would consider "mostly working" since 2007.

12/08/24

Made "major" changes to the Major Havoc driver, fixed nvram saving, added Major Havoc - The Promised End v1.01 to the driver. Will further split out everything and refine at a later date. Going back to graphics fixes.

12/11/24

Corrected the Menu System, first pass. Sound and Graphics Menus are working again, more or less. Still more work to do here with individual game configuration saves. Moved everything around to make it look at least a little bit better. 

12/12/14 Increased rendering time with another FBO, but it worked around a major rendering flaw allowing me to composite the menu and FPS onto the screen without doing any crazy scaling everywhere to compensate for screen sizes.
The menu system still needs work, I recommend not touching it except on the gui screen.

12/17/24 Many config and Menu changes, hopefully all the menu issues are resolved. 

12/21/24 Fixed main volume being too low, made too many changes to the menu system to list. More config changes to fix sound and graphics setting issues. Now the screen resolution can only be set in the gui, or by manually editing the config file.
Adjusted sound in asteroids and asteroids deluxe. Added clipping to tempest to stop the lines from going around the bezel in certain resolutions. Made a few graphic code changes to prep for more changes. Moved the game specific INI files to their own folder. 

12/22/24 Squashed the last rendering bug affecting the vertical games and battlezone. At this point, I think all the rendering is fixed, time to add a couple of features before completely changing the cpu and atari vector rendering.

12/26/24
Cleaned up video tick counting Code, adjusted AVG timing code for Major Havoc, this seems to clear up the issue with not being able to put in the secret code in mhavocpe. Or i'm way off base and I've made things worse, I don't have a real major havoc pcb to test with.

12/27/24
Found a ridiclous bug with counting the total cycles executed in the 6502 core. It was consistently underreporting the number of executed cycles, throwing everything off. Corrected.  

12/28/24 More Major Havoc cleanups. At this point I'll call it "Meh". It works pretty well, it's only a couple of percent off now as far as cycle emulation compared to the real board. To get it near perfect is going to require a complete rewrite, working on it. 
Cleaned up and removed dead code from cpu_control.h, trying to narrow down requirements for said rewrite.

2/5/24
Major Rewrite phase 1. Consolidated DVG code, moved everything to the mame style cpu/timing code, added mostly cycle accurate timing to most drivers. 
Started adding code to forklift to a complete newer core codeset. 

2/6/25
Fixed DVG issues. Fixed remaining watchdog issues. Hacked back in pause function.

2/12/25 Minor tweak to black widow size. Changed the zip loader to match other code I have written.

2/17/25
Merged the last of the old code out and cleaned up the Major Havoc driver. 
Misc code updates and bug fixes. Added a flag to disable the code profiling to keep the log from filling up. 
Input bugfix will require some tweaking on the analog sensitivity. This is an issue I am still battling in the new allegro free version with Rawinput.
Fixed most remaining volume issues. 

2/18/25
Changed the sampling in BattleZone to work better with my new sound code. 

2/22/25
Started updating the Cinematronics Driver, fixed drone sounds for star castle and others. Major re-org of the code.

2/25/25
Replaced some of the horribly depricated opengl rendering code with slightly less depricated rendering code. No increase in rendering speed though. Bummer.

2/28/25 
Updated rendering code, added newer M.A.M.E. Rendering code as a placeholder 

3/10/25 
Minor fix to Major Havoc, added missing mhavoc_sh_stop to the end code to fix audio issue.

3/11/25 - 4/3/25
Removed all Allegro code, added my GL Windowing code, updated and fixed my Rawinput code and the Menu code I am using from M.A.M.E..
Extended and used my mixing code with Xaudio2-2.9 for audio.
Removed the Gui as it just wasn't working anymore with the new code. It might return later. I'll upload my custom arcade cabinet frontend in another repository.
Corrected a directory issue with running from a 3rd party frontend in a different directory. 
The only thing keeping this emulator 32 bit is the 68000 series asm core, and that will get changed out at a later date. 
Made multiple audio corrections and biugfixes to the changes in the audio2 mixercode, it still needs quite a bit of work but it's functional.
Corrected and verified that I can build for Windows 7-11 with no issues. Define WIN7BUILD to build for Windows 7 32/64 bit.
 
4/4/25
Removed unneeded sample code. Created a popup error message if you try to run the program without specifying a rom name. 

4/8/25
Discovered the LED code for the Atari games was completedly our of wack. 
Cleaned up, updated and tested all led code. Switched to later M.A.M.E (TM) code and added code to guarantee all leds are off when starting or exiting a game. 

4/26/25
Removed the Starscream 68000 core and switched to a VERY old version of MUSASHI with the help of some code from Charles McDonald. This has been implemented for Quantum, I'll add aztarac in a future release once I refactor the memory handlers into something decent. 
Now all code releases from this point will be a 64 bit build. This was my biggest milestone for this code, and I'm very happy to have reached it.

4/27/25
Cleaned up and rewrote the quantum driver. Completed the 68000 integration and wrote handler code like the rest of the cpu's and added it in. Ready to write and add a Aztarac driver now.  

5/2/25
Biggest re-write of the vector code to date. Completely rewrote the Atari AVG code, finished cleanup of the 68000 code, fixes to sound and video in all cinematronics games, fixed audio in Lunar Lander and Battlezone. Added skeleton Aztarac driver. Added vector clipping, removed the bezels from the vertical games, improving the video quality. Changed the color vector rendering, should be a slight improvement. 
Fixed volume handling in my mixer code. 

5/3/25 Small cleanups. TODO: Massive starwars rewrite to add ESB support., Finish adding Aztarac, fix broken menu items, fix command line arguments, add vertical game screen rotation. 

5/4/25. Misc cleanups, Freq fixes for my Mixercode, added a debug option, added a finished Aztarac Driver. 

5/5/25. Started ROM loading cleanup and code move and rewrite. Added MAME style CRC and SHA-1 handling, just for kicks. Started adding current MAME rom definitions to bring the games up to date.

5/6/25 Finished updating all roms, rewrote the rom loader, added sha-1 and crc checksum, not using MAME code. Checked every single game, updated the video and inputs on all games. I never want to play asterock again. 

5/8/25 Added ROM_CONTINUE Support to the load_roms function, updated ROM_RELOAD to allow for multiples, Updated the 6809, added MAME slapstic code, added an Empire Strikes Back driver to the Starwars driver but it's not working quite yet. 
Added support for a couple of more alternate romsets to the Black Widow driver. 
Readded the command line option -listromstotext to write a file of all supported games and romsets
Fixed missing freeing of CPU instances and allocated memory regions, as well as sound memory.
Added sample_get_freq(int chanid) to fix battlezone motor speed when using multiple emulator sound frequencies. 

5/19/25. Spent way to many days working out the slapstic encryption in ESB, and I still don't understand MAME rom banking. 
Rewrote the starwars driver, rewrote the 6809 cpu code from John Butler, twice. Figured out how the slapstic encryption works, but I still don't know how MAME figures out what to send to the slapstic code, but I worked around it. I'll clean it up on the next release, but it's finally working. 

5/20/25
ESB was the last game I ever wanted to emulate, and I am super happy to have finally made it here. It seems like a very small accomplishment, but having rewritten both the z80 and 6502 cpus, figured out all the games, written all my own window, graphic, sound and (mostly) input code, I feel like I've accomplished a lot, even with riding on the back of all the work done by so many people for MAME.
What's next? Back to working on other things, then maybe a major rendering upgrade to newer technology, we'll see. That's after re-adding the gui and fixing all the missing command line functionality and various remaining bugs.! 

5/20 - 5/26/25
Added old MAME 3.1 Raster Video code. 
Added new drivers for Midway Space Invaders and Space Invaders Deluxe just to have something that uses the 8080 Cpu. 
More code cleanups, tried to remove the use of "gamenum" everywhere. 
Reintroduced the Ambient Sound sample, fixed multiple Menu bugs in the process.
You can now see changes again to linewidth and pointsize dynamically. 
Cleaned up the Major Havoc driver to remove the gamenum use. 
Started working on a cleanup and rewrite of all the legacy opengl code, working to move OpenGL 4/ shaders only. I've been reviewing Vulcan, but the amount of work right now exceeds my freetime. Maybe someday. 
I hope to clean up enough eventually to be able to re-add the gui. 

5/27/25
Added cocktail screen flipping support to Asteroids and Asteroids Deluxe.

5/28/25 Fixed the issue where the emulator would crash if the required samples were not found. Added the ability to unthrottle the emulation (F10)

6/21/25 Took a small break. 
Bought a ChatGPT subscription. 
Rewrote the logging, ini file and emulation timer code. 
Made major changes to the RawInput Code. 
Started reorganizing the legacy rendering code, cleaned up a bit. I have broken up each section of the graphics and are working on upgrading them to modern openGL. The final version will use MAME lay files for artwork. 
Shader code has been moved to a new header, the old files are no longer required and have been removed. The Shader code has also been updated.
Started cleaning up the main win32 functions.
I've been fighting with the LEDs on the Ultimarc I-PAC, so I'm also trying out new LED code. 
Minor cleanup on the ay-8910 emulation. 

6/22/25 Updated to the latest Audio Engine code. Verified against several games, should be ok. Uploaded latest Mixer code to GitHub

6/23/25-6/24/25 C++ 17 is now required for this code to compile, FYI. Reworked most of the config, updated and moved the config options out of the main header. Still more work to do, focused on fixing menu system issues. 
Cleaned up and updated the emu_vector_draw code, I think there is a slight graphics improvement on the color games. Still slowly trudging toward opengl4, but there are a ton of other things to fix first, now that I have at least of most of the games emulated more or less correctly. 

6/25/25
Got sidetracked working on the pokey code. Merged the MAME pokeyintf code with the pokey, made a few changes and added more or less cycle accurate random generation similar but not the same as MAME.Verified that it passes the 150,000 point test in Tempest. Removed all the tempest protection hacks. 
Added a new cpu function, get_exact_cycles(int cpu_num) which gives the exact cycle count for that frame/cpu.

6/26/25
Continued Opengl Updates and cleanup. Going to release a new version since there have been so many quality changes since the last release.

6/27/25
More cleanup, no more GL_QUADS. Removed all traces of the GUI, it's most likely not coming back. 

6/29/25. Broke Windows 7 compatibility, this got me: https://github.com/microsoft/STL/releases/tag/vs-2022-17.10 on std::mutex. Did a lot of testing, nothing seems to work except creating your own win32 code and ditching std::mutex, so for now added the preprocessor _DISABLE_CONSTEXPR_MUTEX_CONSTRUCTOR as a workaround.
Fixed code crashing on Windows 7 when running without command line options.

6/30/25
Minor 6502 and z80 fixes, all documented functions should finally be emulated correctly. I don't know how I can keep doing optimizations and my 6502 code is about 20% slower.
Removed more old code.Gui and old font code are gone. Removed all traces of gamenum[0] which was the gui. 

7/26/25
Life gets in the way sometime, but a major revamp of the win32 code coming soon. Removed the last bit of depricated opengl code with the tetrect.cpp code., moved it to a shader. Minor work on texturing but really prepping for a major code change, coming soonish.

7/30/25
Swapped out all the win32 code from my in progress game engine project. Swapped to unicode handling (incomplete). With the new engine it should be easy enough to add back the GUI. New command line options, I need to write a quick document but I haven't quite gotten to that yet. A lot of things are still in flux, I am still testing ways to render the lines and points with opengl4 shaders. 
Added ALT-TAB switching from window to fullscreen. Reorganized the game code and separated it from the engine/system code. These changes pave the way for better graphics handling. Changed up the licensing a bit (still in progress) and made sure to try to document correctly all M.A.M.E code as copyright the team and the original authors. Next is still cleanup then a major effort to get rid of video.ini and correctly add (with non-MAME code) the MAME style layout handling. 

8/1/25 In an effort to speed up the code as much as possible, I moved all audio and input processing to their own threads. Does it make a difference? I'm still running tests but it looks good so far. Also cleaned up a bit of the mixer code. 






 

 


 



